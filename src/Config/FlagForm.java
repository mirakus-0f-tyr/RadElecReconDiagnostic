/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Config;

import MainMenu.ScanComm;
/**
 *
 * @author john
 */
public class FlagForm extends javax.swing.JFrame {

    // flag preferences
    public static String displayPreferencePres;
    public static String displayPreferenceTemp;
    public static String displayPreferenceDual;
    public static String displayPreferenceUnits;
    public static String displayPreferenceNoAvg;

    /**
     * Creates new form FlagForm
     */
    public FlagForm() {
	displayPreferencePres = "mBar";
	displayPreferenceTemp = "F";
	displayPreferenceDual = "no";
	displayPreferenceUnits = "pCi/L";
	displayPreferenceNoAvg = "Hourly";
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPressure = new javax.swing.JLabel();
        lblTemperature = new javax.swing.JLabel();
        lblDualChamber = new javax.swing.JLabel();
        lblExposureUnits = new javax.swing.JLabel();
        cboPressureSelect = new javax.swing.JComboBox<>();
        cboTemperatureSelect = new javax.swing.JComboBox<>();
        cboDualChamberSelect = new javax.swing.JComboBox<>();
        cboRadonUnitSelect = new javax.swing.JComboBox<>();
        btnApplySpecial = new javax.swing.JButton();
        cboToggleNoAveraging = new javax.swing.JComboBox<>();
        lblDisplayedReadingInterval = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);

        lblPressure.setText("Pres. Unit");

        lblTemperature.setText("Temp. Unit");

        lblDualChamber.setText("Dual Chamber");

        lblExposureUnits.setText("Radon Unit");

        cboPressureSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "mBar", "inHG" }));
        cboPressureSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPressureSelectActionPerformed(evt);
            }
        });

        cboTemperatureSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "F", "C" }));
        cboTemperatureSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTemperatureSelectActionPerformed(evt);
            }
        });

        cboDualChamberSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Yes" }));
        cboDualChamberSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDualChamberSelectActionPerformed(evt);
            }
        });

        cboRadonUnitSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pCi/L", "Bq/m3", "CPH" }));
        cboRadonUnitSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboRadonUnitSelectActionPerformed(evt);
            }
        });

        btnApplySpecial.setText("Apply");
        btnApplySpecial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplySpecialActionPerformed(evt);
            }
        });

        cboToggleNoAveraging.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hourly", "Ten Mins." }));
        cboToggleNoAveraging.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboToggleNoAveragingActionPerformed(evt);
            }
        });

        lblDisplayedReadingInterval.setText("Displayed Reading Interval (Firmware 1.29 and later.)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPressure)
                            .addComponent(cboPressureSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblExposureUnits)
                            .addComponent(cboRadonUnitSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboDualChamberSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDualChamber)
                            .addComponent(lblTemperature)
                            .addComponent(cboTemperatureSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cboToggleNoAveraging, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDisplayedReadingInterval)
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApplySpecial)
                .addGap(168, 168, 168))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPressure)
                    .addComponent(lblDualChamber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboPressureSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboDualChamberSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblExposureUnits)
                    .addComponent(lblTemperature))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboRadonUnitSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTemperatureSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(lblDisplayedReadingInterval)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboToggleNoAveraging, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnApplySpecial)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboDualChamberSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDualChamberSelectActionPerformed
        if (cboDualChamberSelect.getSelectedItem().equals("Yes"))
	    displayPreferenceDual = "yes";
	else
	    displayPreferenceDual = "no";
    }//GEN-LAST:event_cboDualChamberSelectActionPerformed

    private void cboTemperatureSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTemperatureSelectActionPerformed
        if (cboTemperatureSelect.getSelectedItem().equals("F"))
	    displayPreferenceTemp = "F";
	else
	    displayPreferenceTemp = "C";
    }//GEN-LAST:event_cboTemperatureSelectActionPerformed

    private void cboRadonUnitSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboRadonUnitSelectActionPerformed
        if (cboRadonUnitSelect.getSelectedItem().equals("pCi/L"))
	    displayPreferenceUnits = "pCi/L";
	else if (cboRadonUnitSelect.getSelectedItem().equals("Bq/m3"))
	    displayPreferenceUnits = "Bq/m3";
	else if (cboRadonUnitSelect.getSelectedItem().equals("CPH"))
	    displayPreferenceUnits = "CPH";
    }//GEN-LAST:event_cboRadonUnitSelectActionPerformed

    private void cboPressureSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPressureSelectActionPerformed
        if (cboPressureSelect.getSelectedItem().equals("inHG"))
	    displayPreferencePres = "inHG";
	else
	    displayPreferencePres = "mBar";
    }//GEN-LAST:event_cboPressureSelectActionPerformed

    private void btnApplySpecialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplySpecialActionPerformed
	System.out.println("Attempting to write flag value.");

	try {
	   ScanComm.run(8);
	}

	// needs proper handling
	catch (Exception anyEx) {};
    }//GEN-LAST:event_btnApplySpecialActionPerformed

    private void cboToggleNoAveragingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboToggleNoAveragingActionPerformed
        if (cboToggleNoAveraging.getSelectedItem().equals("Ten Mins."))
	    displayPreferenceNoAvg = "Ten Mins.";
	else
	    displayPreferenceNoAvg = "Hourly";
    }//GEN-LAST:event_cboToggleNoAveragingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlagForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlagForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlagForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlagForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FlagForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApplySpecial;
    private javax.swing.JComboBox<String> cboDualChamberSelect;
    private javax.swing.JComboBox<String> cboPressureSelect;
    private javax.swing.JComboBox<String> cboRadonUnitSelect;
    private javax.swing.JComboBox<String> cboTemperatureSelect;
    private javax.swing.JComboBox<String> cboToggleNoAveraging;
    private javax.swing.JLabel lblDisplayedReadingInterval;
    private javax.swing.JLabel lblDualChamber;
    private javax.swing.JLabel lblExposureUnits;
    private javax.swing.JLabel lblPressure;
    private javax.swing.JLabel lblTemperature;
    // End of variables declaration//GEN-END:variables
}
